name: Dream D4 Deployment
# main, dev 브랜치에 push 된 경우에 실행
on:
  push:
    branches: [dev]
  pull_request:
    branches: [main, dev]
#jobs에 등록된 job들은 기본적으로 병렬적으로 실행된다.
jobs:
  # build 관련 작업
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.6.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js version ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn install
        run: yarn install

      - name: Make .env file
        run: |
          touch .env	
          cat << EOF >> .env	
          ${{ secrets.ENV }}

      - name: Build
        run: yarn build

      - name: zip create
        run: zip -qq -r ./store-8-build.zip ./dist ./server ./middle ./appspec.yml ./scripts ./node_modules ./.env ./custom.d.ts ./tsconfig.json
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --region ap-northeast-2 ./store-8-build.zip s3://store-8/dist/store-8-build.zip
      - name: Deploy to EC2
        run: aws deploy create-deployment
          --application-name store-8
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name store-8-group
          --s3-location bucket=store-8,key=dist/store-8-build.zip,bundleType=zip
